---
title: 🍃[Spring] `@SpringBootTest` 애노테이션
tags:
    - Spring
    - Framework
date: "2024-09-04"
thumbnail: "/assets/img/thumbnail/spring.jpeg"
---

# 🍃[Spring] `@SpringBootTest` 애노테이션.
- `@SpringBootTest` 애노테이션은 Spring Boot 애플리케이션에서 통합 테스트를 수행하기 위해 사용하는 애너테이션입니다.
    - 이 애노테이션은 테스트 클래스에서 Spring Application Context를 로드하고, 실제 애플리케이션의 전체 또는 부분적인 환경을 시뮬레이션하여 테스트할 수 있게 합니다.
    - 주로 애플리케이션의 전반적인 기능을 테스트하거나 여러 레이어(예: 서비스, 레포지토리 등) 간의 상호작용을 검증할 때 사용됩니다.

## 1️⃣ 주요 기능 및 사용 방식.
- **1. Spring Application Context 로드**
    - `@SpringBootTest` 는 기본적으로 애플리케이션의 전체 컨텍스트를 로드합니다.
        - 이 컨텍스트는 실제 애플리케이션을 구동할 때와 동일하게 설정되어, 테스트 환경에서 애플리케이션이 어떻게 동작하는지 검증할 수 있습니다.
- **2. 테스트 환경 설정**
    - `@SpringBootTest` 애노테이션은 다양한 속성을 통해 테스트 환경을 설정할 수 있습니다.
        - 예를 들어, 특정 프로파일을 활성화하거나, 테스트용 설정 파일을 사용할 수 있습니다.
    - `@SpringBootTest(properties = "spring.config.name=test-application")`와 같이 속성을 지정할 수 있습니다.
- **3. 웹 환경 설정**
    - `@SpringBootTest`는 다양한 웹 환경 모드를 지원합니다.
        - `WebEnviroment.MOCK` : 기본값으로, 웹 환경 없이 `MockMvc`를 사용해 서블릿 환경을 모킹합니다.
        - `WebEnviroment.RANDOM_PORT` : 테스트에 임의의 포트를 사용하여 내장 서버를 시작합니다.
        - `WebEnviroment.DEFINED_PORT` : 애플리케이션이 구성된 기본 포트를 사용합니다.
        - `WebEnviroment.NONE` : 웹 환경 없이 애플리케이션 컨텍스트만 로드합니다.

**예시**
```java
@SpringBootTest(webEnvironment = SpringBootTest.WebEnviroment.RANDOM_PORT)
```

- **4. 통합 테스트**
    - 이 애노테이션은 단위 테스트와 달리, 애플리케이션의 여러 계층이 통합된 상태에서 테스트를 수행합니다.
        - 이는 데이터베이스, 웹 서버, 서비스 레이어 등이 실제로 어떻게 상호작용하는지를 확인할 수 있게 해줍니다.
- **5. TestConfiguration 클래스 사용 가능**
    - `@SpringBootTest` 와 함께 `@TestConfiguration` 을 사용하여 테스트를 위해 특별히 구성된 빈(Bean)이나 설정을 정의할 수 있습니다.

## 2️⃣ 예시 코드

```java
@SpringBootTest
public class MyServiceIntegrationTest {
    
    @Autowired
    private MyService myService;
    
    @Test
    public void testServiceMethod() {
        // Given
        // Setup initial conditions
        
        // When
        String result = myService.performAction();
        
        // Then
        assertEquals("ExpectedResult", result);
    }
}
```
- 위의 예시에서 `@SpringBootTest` 는 `MyServiceIntegrationTest` 클래스가 Spring Application Context에서 실행될 수 있도록 하고, `MyService` 빈이 실제로 주입되어 테스트가 실행됩니다.

## 3️⃣ 요약
- `@SpringBootTest`는 Spring Boot 애플리케이션에서 통합 테스트를 쉽게 수행할 수 있도록 돕는 강력한 애노테이션입니다.
    - 이 애노테이션을 사용하면 애플리케이션의 전체 컨텍스트를 로드한 상태에서 테스트할 수 있으며, 복잡한 애플리케이션 시나리오를 검증하는 데 유용합니다.
